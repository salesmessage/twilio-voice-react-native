{"version":3,"names":["RTCStats","exports","_RTCStats","IceCandidatePairState"],"sources":["RTCStats.ts"],"sourcesContent":["/**\n * Types related to WebRTC stats.\n *\n * @public\n */\nexport namespace RTCStats {\n  export enum IceCandidatePairState {\n    STATE_FAILED = 'STATE_FAILED',\n    STATE_FROZEN = 'STATE_FROZEN',\n    STATE_IN_PROGRESS = 'STATE_IN_PROGRESS',\n    STATE_SUCCEEDED = 'STATE_SUCCEEDED',\n    STATE_WAITING = 'STATE_WAITING',\n  }\n\n  export interface IceCandidatePairStats {\n    activeCandidatePair: boolean;\n    availableIncomingBitrate: number;\n    availableOutgoingBitrate: number;\n    bytesReceived: number;\n    bytesSent: number;\n    consentRequestsReceived: number;\n    consentRequestsSent: number;\n    consentResponsesReceived: number;\n    consentResponsesSent: number;\n    currentRoundTripTime: number;\n    localCandidateId: string;\n    localCandidateIp: string;\n    nominated: boolean;\n    priority: number;\n    readable: boolean;\n    relayProtocol: string;\n    remoteCandidateId: string;\n    remoteCandidateIp: string;\n    requestsReceieved: number;\n    requestsSent: number;\n    responsesRecieved: number;\n    responsesSent: number;\n    retransmissionsReceived: number;\n    retransmissionsSent: number;\n    state: IceCandidatePairState;\n    totalRoundTripTime: number;\n    transportId: string;\n    writeable: boolean;\n  }\n\n  export interface IceCandidateStats {\n    candidateType: string;\n    deleted: boolean;\n    ip: string;\n    isRemote: boolean;\n    port: number;\n    priority: number;\n    protocol: string;\n    transportId: string;\n    url: string;\n  }\n\n  export interface BaseTrackStats {\n    codec: string;\n    packetsLost: number;\n    ssrc: string;\n    timestamp: number;\n    trackId: string;\n  }\n\n  export interface LocalTrackStats extends BaseTrackStats {\n    bytesSent: number;\n    packetsSent: number;\n    roundTripTime: number;\n  }\n\n  export interface LocalAudioTrackStats extends LocalTrackStats {\n    audioLevel: number;\n    jitter: number;\n  }\n\n  export interface RemoteTrackStats extends BaseTrackStats {\n    bytesRecieved: number;\n    packetsReceived: number;\n  }\n\n  export interface RemoteAudioTrackStats extends RemoteTrackStats {\n    audioLevel: number;\n    jitter: number;\n    mos: number;\n  }\n\n  /**\n   * WebRTC stats report. Contains diagnostics information about\n   * `RTCPeerConnection`s and summarizes data for an ongoing call.\n   */\n  export interface StatsReport {\n    iceCandidatePairStats: IceCandidatePairStats[];\n    iceCandidateStats: IceCandidateStats[];\n    localAudioTrackStats: LocalAudioTrackStats[];\n    peerConnectionId: string;\n    remoteAudioTrackStats: RemoteAudioTrackStats[];\n  }\n}\n"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AAJA,IAKiBA,QAAQ,GAAAC,OAAA,CAAAD,QAAA;AAAA,WAAAE,SAAA;EAAA,IACXC,qBAAqB,0BAArBA,qBAAqB;IAArBA,qBAAqB;IAArBA,qBAAqB;IAArBA,qBAAqB;IAArBA,qBAAqB;IAArBA,qBAAqB;IAAA,OAArBA,qBAAqB;EAAA;EAAAD,SAAA,CAAAC,qBAAA,GAAAA,qBAAA;EAiFjC;AACF;AACA;AACA;AAHE,GAlFeH,QAAQ,KAAAC,OAAA,CAAAD,QAAA,GAARA,QAAQ"}